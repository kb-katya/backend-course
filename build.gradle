buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

plugins {
    id "org.flywaydb.flyway" version "7.3.2"
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'kotlinx-serialization'

group 'com.kb-katya'
version '0.0.1'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-auth:$ktor_version"
    compile "io.ktor:ktor-auth-jwt:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"
    compile "io.ktor:ktor-serialization:$ktor_version"
    testCompile "io.ktor:ktor-server-tests:$ktor_version"
    compile "org.jetbrains.exposed:exposed-core:$exposed_version"
    compile "org.jetbrains.exposed:exposed-dao:$exposed_version"
    compile "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    compile "org.jetbrains.exposed:exposed-java-time:$exposed_version"
    compile "org.postgresql:postgresql:$postgresql_version"
    compile "com.zaxxer:HikariCP:$hikaricp_version"
    compile "org.flywaydb:flyway-core:$flywaydb_version"
    compile "org.mindrot:jbcrypt:$bcrypt_version"
    implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

flyway{
    locations = ['filesystem:resources/db/migration']

    url = 'jdbc:postgresql://localhost/bank'
    user = 'postgres'
    password = 'admin'
    baselineOnMigrate = true
}

flyway {
    url = System.getenv('DB_URL')
    user = System.getenv('DB_USER')
    password = System.getenv('DB_PASSWORD')
    baselineOnMigrate=true
    locations = ["filesystem:resources/db/migration"]
}
